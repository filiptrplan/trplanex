@import url(https://fonts.googleapis.com/css2?family=Rubik&display=swap);
/*! tailwindcss v2.0.3 | MIT License | https://tailwindcss.com */
/*! modern-normalize v1.0.0 | MIT License | https://github.com/sindresorhus/modern-normalize */
/*
Document
========
*/
/**
Use a better box model (opinionated).
*/
*,
*::before,
*::after {
  box-sizing: border-box; }

/**
Use a more readable tab size (opinionated).
*/
:root {
  -moz-tab-size: 4;
  -o-tab-size: 4;
  tab-size: 4; }

/**
1. Correct the line height in all browsers.
2. Prevent adjustments of font size after orientation changes in iOS.
*/
html {
  line-height: 1.15;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/*
Sections
========
*/
/**
Remove the margin in all browsers.
*/
body {
  margin: 0; }

/**
Improve consistency of default fonts in all browsers. (https://github.com/sindresorhus/modern-normalize/issues/3)
*/
body {
  font-family: system-ui, -apple-system, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji"; }

/*
Grouping content
================
*/
/**
1. Add the correct height in Firefox.
2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)
*/
hr {
  height: 0;
  /* 1 */
  color: inherit;
  /* 2 */ }

/*
Text-level semantics
====================
*/
/**
Add the correct text decoration in Chrome, Edge, and Safari.
*/
abbr[title] {
  -webkit-text-decoration: underline dotted;
  text-decoration: underline dotted; }

/**
Add the correct font weight in Edge and Safari.
*/
b,
strong {
  font-weight: bolder; }

/**
1. Improve consistency of default fonts in all browsers. (https://github.com/sindresorhus/modern-normalize/issues/3)
2. Correct the odd 'em' font sizing in all browsers.
*/
code,
kbd,
samp,
pre {
  font-family: ui-monospace, SFMono-Regular, Consolas, 'Liberation Mono', Menlo, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/**
Add the correct font size in all browsers.
*/
small {
  font-size: 80%; }

/**
Prevent 'sub' and 'sup' elements from affecting the line height in all browsers.
*/
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sub {
  bottom: -0.25em; }

sup {
  top: -0.5em; }

/*
Tabular data
============
*/
/**
1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)
2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)
*/
table {
  text-indent: 0;
  /* 1 */
  border-color: inherit;
  /* 2 */ }

/*
Forms
=====
*/
/**
1. Change the font styles in all browsers.
2. Remove the margin in Firefox and Safari.
*/
button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */ }

/**
Remove the inheritance of text transform in Edge and Firefox.
1. Remove the inheritance of text transform in Firefox.
*/
button,
select {
  /* 1 */
  text-transform: none; }

/**
Correct the inability to style clickable types in iOS and Safari.
*/
button,
[type='button'],
[type='reset'],
[type='submit'] {
  -webkit-appearance: button; }

/**
Remove the inner border and padding in Firefox.
*/
::-moz-focus-inner {
  border-style: none;
  padding: 0; }

/**
Restore the focus styles unset by the previous rule.
*/
:-moz-focusring {
  outline: 1px dotted ButtonText; }

/**
Remove the additional ':invalid' styles in Firefox.
See: https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737
*/
:-moz-ui-invalid {
  box-shadow: none; }

/**
Remove the padding so developers are not caught out when they zero out 'fieldset' elements in all browsers.
*/
legend {
  padding: 0; }

/**
Add the correct vertical alignment in Chrome and Firefox.
*/
progress {
  vertical-align: baseline; }

/**
Correct the cursor style of increment and decrement buttons in Safari.
*/
::-webkit-inner-spin-button,
::-webkit-outer-spin-button {
  height: auto; }

/**
1. Correct the odd appearance in Chrome and Safari.
2. Correct the outline style in Safari.
*/
[type='search'] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */ }

/**
Remove the inner padding in Chrome and Safari on macOS.
*/
::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
1. Correct the inability to style clickable types in iOS and Safari.
2. Change font properties to 'inherit' in Safari.
*/
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */ }

/*
Interactive
===========
*/
/*
Add the correct display in Chrome and Safari.
*/
summary {
  display: list-item; }

/**
 * Manually forked from SUIT CSS Base: https://github.com/suitcss/base
 * A thin layer on top of normalize.css that provides a starting point more
 * suitable for web applications.
 */
/**
 * Removes the default spacing and border for appropriate elements.
 */
blockquote,
dl,
dd,
h1,
h2,
h3,
h4,
h5,
h6,
hr,
figure,
p,
pre {
  margin: 0; }

button {
  background-color: transparent;
  background-image: none; }

/**
 * Work around a Firefox/IE bug where the transparent `button` background
 * results in a loss of the default `button` focus styles.
 */
button:focus {
  outline: 1px dotted;
  outline: 5px auto -webkit-focus-ring-color; }

fieldset {
  margin: 0;
  padding: 0; }

ol,
ul {
  list-style: none;
  margin: 0;
  padding: 0; }

/**
 * Tailwind custom reset styles
 */
/**
 * 1. Use the user's configured `sans` font-family (with Tailwind's default
 *    sans-serif font stack as a fallback) as a sane default.
 * 2. Use Tailwind's default "normal" line-height so the user isn't forced
 *    to override it to ensure consistency even when using the default theme.
 */
html {
  font-family: Rubik, sans-serif;
  /* 1 */
  line-height: 1.5;
  /* 2 */ }

/**
 * Inherit font-family and line-height from `html` so users can set them as
 * a class directly on the `html` element.
 */
body {
  font-family: inherit;
  line-height: inherit; }

/**
 * 1. Prevent padding and border from affecting element width.
 *
 *    We used to set this in the html element and inherit from
 *    the parent element for everything else. This caused issues
 *    in shadow-dom-enhanced elements like <details> where the content
 *    is wrapped by a div with box-sizing set to `content-box`.
 *
 *    https://github.com/mozdevs/cssremedy/issues/4
 *
 *
 * 2. Allow adding a border to an element by just adding a border-width.
 *
 *    By default, the way the browser specifies that an element should have no
 *    border is by setting it's border-style to `none` in the user-agent
 *    stylesheet.
 *
 *    In order to easily add borders to elements by just setting the `border-width`
 *    property, we change the default border-style for all elements to `solid`, and
 *    use border-width to hide them instead. This way our `border` utilities only
 *    need to set the `border-width` property instead of the entire `border`
 *    shorthand, making our border utilities much more straightforward to compose.
 *
 *    https://github.com/tailwindcss/tailwindcss/pull/116
 */
*,
::before,
::after {
  box-sizing: border-box;
  /* 1 */
  border-width: 0;
  /* 2 */
  border-style: solid;
  /* 2 */
  border-color: #e5e7eb;
  /* 2 */ }

/*
 * Ensure horizontal rules are visible by default
 */
hr {
  border-top-width: 1px; }

/**
 * Undo the `border-style: none` reset that Normalize applies to images so that
 * our `border-{width}` utilities have the expected effect.
 *
 * The Normalize reset is unnecessary for us since we default the border-width
 * to 0 on all elements.
 *
 * https://github.com/tailwindcss/tailwindcss/issues/362
 */
img {
  border-style: solid; }

textarea {
  resize: vertical; }

input::-moz-placeholder, textarea::-moz-placeholder {
  opacity: 1;
  color: #9ca3af; }

input:-ms-input-placeholder, textarea:-ms-input-placeholder {
  opacity: 1;
  color: #9ca3af; }

input::placeholder,
textarea::placeholder {
  opacity: 1;
  color: #9ca3af; }

button,
[role="button"] {
  cursor: pointer; }

table {
  border-collapse: collapse; }

h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: inherit;
  font-weight: inherit; }

/**
 * Reset links to optimize for opt-in styling instead of
 * opt-out.
 */
a {
  color: inherit;
  text-decoration: inherit; }

/**
 * Reset form element properties that are easy to forget to
 * style explicitly so you don't inadvertently introduce
 * styles that deviate from your design system. These styles
 * supplement a partial reset that is already applied by
 * normalize.css.
 */
button,
input,
optgroup,
select,
textarea {
  padding: 0;
  line-height: inherit;
  color: inherit; }

/**
 * Use the configured 'mono' font family for elements that
 * are expected to be rendered with a monospace font, falling
 * back to the system monospace stack if there is no configured
 * 'mono' font family.
 */
pre,
code,
kbd,
samp {
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace; }

/**
 * Make replaced elements `display: block` by default as that's
 * the behavior you want almost all of the time. Inspired by
 * CSS Remedy, with `svg` added as well.
 *
 * https://github.com/mozdevs/cssremedy/issues/14
 */
img,
svg,
video,
canvas,
audio,
iframe,
embed,
object {
  display: block;
  vertical-align: middle; }

/**
 * Constrain images and videos to the parent width and preserve
 * their instrinsic aspect ratio.
 *
 * https://github.com/mozdevs/cssremedy/issues/14
 */
img,
video {
  max-width: 100%;
  height: auto; }

.container {
  margin: auto; }
  @media (min-width: 1600px) {
    .container {
      max-width: 1400px; } }

@media (min-width: 1200px) and (max-width: 1599px) {
  .container {
    max-width: 1200px; } }

@media (min-width: 992px) and (max-width: 1199px) {
  .container {
    max-width: 992px; } }

@media (min-width: 700px) and (max-width: 991px) {
  .container {
    max-width: 700px; } }
  @media (max-width: 699px) {
    .container {
      max-width: 100%;
      margin: 0; } }

body {
  background-color: var(--main-bg-color); }

html,
body {
  color: var(--text-color);
  font-family: 'Rubik', sans-serif;
  font-size: 1.1em; }

h1,
h2,
h3,
h4,
h5,
h6 {
  color: var(--emphasis-text-color); }

h1 {
  font-size: 3rem;
  font-weight: 600; }

h2 {
  font-size: 2.5rem;
  font-weight: 600; }

h3 {
  font-size: 2.25rem;
  font-weight: 600; }

h4 {
  font-size: 2rem; }

h5 {
  font-size: 1.75rem; }

h6 {
  font-size: 1.5rem; }

small {
  font-weight: 300; }

a {
  color: var(--primary);
  border-color: var(--primary);
  font-weight: bold;
  border-bottom: 2px solid;
  line-height: 1em;
  display: inline-block; }
  a:hover {
    color: var(--primary-light);
    border-color: var(--primary-light); }

.btn {
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 200ms;
  color: white;
  padding: 0.5rem 1rem;
  border: 2px solid;
  border-radius: 0.75rem; }
  .btn:active, .btn:focus {
    outline: none; }

label {
  color: var(--emphasis-text-color); }

.text-input {
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 200ms;
  border: 2px solid;
  border-color: rgba(var(--main-bg-contrast), 0.25);
  background-color: var(--input-text-bg);
  padding: 0.5rem 0.75rem;
  border-radius: 1rem; }
  .text-input:active, .text-input:focus {
    outline: none; }
  .text-input:focus {
    border-color: var(--main-bg-contrast); }

.checkbox-container {
  display: grid;
  grid-template-columns: -webkit-min-content auto;
  grid-template-columns: min-content auto;
  vertical-align: middle;
  align-items: center;
  grid-gap: 0.5em;
  color: var(--emphasis-text-color); }
  .checkbox-container .checkbox-input {
    display: grid;
    width: 1em;
    height: 1em;
    grid-template-areas: "checkbox"; }
    .checkbox-container .checkbox-input > * {
      grid-area: checkbox; }
    .checkbox-container .checkbox-input input {
      opacity: 0;
      width: 1em;
      height: 1em; }
    .checkbox-container .checkbox-input input:checked + .checkbox-icon svg .path {
      -webkit-animation: check 0.6s cubic-bezier(0.4, 0, 0.2, 1) forwards;
              animation: check 0.6s cubic-bezier(0.4, 0, 0.2, 1) forwards; }
    .checkbox-container .checkbox-input input:not(:checked) + .checkbox-icon svg .path {
      stroke-dashoffset: 0;
      -webkit-animation: uncheck 0.25s cubic-bezier(0.4, 0, 0.2, 1) forwards;
              animation: uncheck 0.25s cubic-bezier(0.4, 0, 0.2, 1) forwards; }
    .checkbox-container .checkbox-input .checkbox-icon {
      display: inline-grid;
      width: 1.05em;
      height: 1.05em;
      border-radius: 0.25em;
      border: 0.1em solid var(--primary);
      background-color: var(--primary); }
      .checkbox-container .checkbox-input .checkbox-icon svg .path {
        stroke: white;
        stroke-dasharray: 200;
        stroke-dashoffset: 200;
        transform: scale(0.95) translate(1px, 3px); }
  .checkbox-container .checkbox-label {
    margin-top: 2px; }

@-webkit-keyframes check {
  to {
    stroke-dashoffset: 0; } }

@keyframes check {
  to {
    stroke-dashoffset: 0; } }

@-webkit-keyframes uncheck {
  to {
    stroke-dashoffset: 200; } }

@keyframes uncheck {
  to {
    stroke-dashoffset: 200; } }

.navbar {
  width: 100vw;
  padding: 1rem 9rem;
  display: flex;
  flex-direction: row;
  align-items: center; }
  @media (max-width: 1599px) {
    .navbar {
      padding: 1rem 5rem; } }
  @media (max-width: 1199px) {
    .navbar {
      padding: 1rem 3rem; } }
  @media (max-width: 991px) {
    .navbar {
      padding: 1rem 1rem; } }
  .navbar .logo-container {
    display: flex;
    flex-direction: row;
    align-items: center; }
    .navbar .logo-container .logo {
      height: 2.5rem;
      width: 2.5rem;
      margin-right: 0.5rem; }
    .navbar .logo-container .name {
      color: var(--emphasis-text-color);
      font-size: 2.5rem;
      vertical-align: middle;
      display: inline-block; }
  .navbar .nav-links {
    width: 100%;
    list-style-type: none;
    display: flex;
    align-items: center;
    flex-direction: row;
    justify-content: flex-end; }
    .navbar .nav-links .nav-item {
      margin: 0 3rem; }
      .navbar .nav-links .nav-item .nav-link {
        transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
        transition-duration: 200ms;
        font-size: 1.25rem;
        border: none;
        color: var(--nav-link-color); }
        .navbar .nav-links .nav-item .nav-link:hover {
          color: var(--nav-link-hover); }
        .navbar .nav-links .nav-item .nav-link.is-active {
          color: var(--nav-link-hover);
          border-bottom: 3px solid;
          border-color: var(--primary); }
  .navbar .nav-item.is-dropdown {
    vertical-align: middle; }
    .navbar .nav-item.is-dropdown:hover .nav-link {
      color: var(--nav-link-hover); }
    .navbar .nav-item.is-dropdown:hover .dropdown {
      display: flex; }
    .navbar .nav-item.is-dropdown:hover .dropdown-icon {
      color: var(--nav-link-hover); }
    .navbar .nav-item.is-dropdown .dropdown-icon {
      transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
      transition-duration: 200ms;
      float: right;
      color: var(--nav-link-color);
      vertical-align: text-bottom; }
    .navbar .nav-item.is-dropdown .dropdown {
      display: none;
      position: absolute;
      padding-top: 0.75rem;
      width: auto;
      transform: translate(-1.5rem, 0rem); }
      .navbar .nav-item.is-dropdown .dropdown.show {
        display: flex; }
      .navbar .nav-item.is-dropdown .dropdown .nav-links {
        background-color: var(--dropdown-bg-color);
        width: auto;
        padding: 0.75rem 0.5rem;
        box-shadow: 0 0 4px 0 rgba(0, 0, 0, 0.1);
        border-radius: 0.75rem;
        flex-direction: column;
        align-items: flex-start; }
        .navbar .nav-item.is-dropdown .dropdown .nav-links .nav-item {
          margin: 0.5rem 1rem; }
          .navbar .nav-item.is-dropdown .dropdown .nav-links .nav-item .nav-link {
            color: var(--nav-link-color); }
            .navbar .nav-item.is-dropdown .dropdown .nav-links .nav-item .nav-link:hover {
              color: var(--nav-link-hover); }

.alert {
  width: 100%;
  background-color: #DBEAFE;
  padding: 1rem 1.25rem;
  border-radius: 1rem;
  margin: 0.25rem 0rem;
  vertical-align: middle; }
  .alert .alert-close {
    float: right;
    padding: 0.25rem;
    display: flex;
    border-radius: 9999px; }
    .alert .alert-close .material-icons {
      font-size: 1.25rem;
      vertical-align: text-bottom;
      text-align: center;
      padding-right: 1px; }
    .alert .alert-close:active, .alert .alert-close:focus {
      outline: none; }

.btn.is-primary {
  background-color: var(--primary);
  border-color: var(--primary);
  color: white; }
  .btn.is-primary:hover {
    color: white;
    background-color: var(--primary-dark);
    border-color: var(--primary-dark); }
  .btn.is-primary:active {
    background-color: var(--primary-dark); }
  .btn.is-primary:active, .btn.is-primary:focus {
    box-shadow: 0px 0px 0px 5px rgba(var(--primary), 0.25); }

.btn.is-danger {
  background-color: var(--danger);
  border-color: var(--danger);
  color: white; }
  .btn.is-danger:hover {
    color: white;
    background-color: var(--danger-dark);
    border-color: var(--danger-dark); }
  .btn.is-danger:active {
    background-color: var(--danger-dark); }
  .btn.is-danger:active, .btn.is-danger:focus {
    box-shadow: 0px 0px 0px 5px rgba(var(--danger), 0.25); }

.btn.is-secondary {
  background-color: var(--main-bg-color);
  border-color: var(--main-bg-contrast);
  color: var(--main-bg-contrast); }
  .btn.is-secondary:hover {
    color: var(--main-bg-contrast);
    background-color: var(--btn-secondary-hover);
    border-color: var(--main-bg-contrast); }
  .btn.is-secondary:active {
    background-color: var(--btn-secondary-hover); }
  .btn.is-secondary:active, .btn.is-secondary:focus {
    box-shadow: 0px 0px 0px 5px rgba(var(--main-bg-contrast), 0.25); }

.alert.is-danger {
  background-color: var(--danger-light);
  color: white; }
  .alert.is-danger .alert-close {
    background-color: var(--danger); }
    .alert.is-danger .alert-close:hover {
      background-color: var(--danger-dark); }

.alert.is-secondary {
  background-color: var(--main-bg-dark);
  color: var(--main-bg-contrast);
  border-color: var(--main-bg-contrast);
  border: 2px solid;
  padding: calc(1rem - 2px) calc(1.25rem - 2px); }
  .alert.is-secondary .alert-close {
    background-color: var(--main-bg-dark);
    border: 2px solid;
    transform: translate(1px, -2px); }
    .alert.is-secondary .alert-close .material-icons {
      font-size: calc(1.25rem - 2px); }
    .alert.is-secondary .alert-close:hover {
      background-color: var(--main-bg-color); }

